.TH "inc/ssix_interface.h" 3 "Sun Jan 10 2016" "Version 1" "S6a Interface Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/ssix_interface.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <freeDiameter/freeDiameter-host\&.h>\fP
.br
\fC#include <freeDiameter/libfdcore\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void \fBavp_or_msg\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBss_reg_ulr_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_reg_clr_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_reg_air_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_reg_idr_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_reg_dsr_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_reg_pur_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_reg_rsr_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_reg_nor_cb\fP (int(*cb)(struct msg **, struct avp *, struct session *, void *, enum disp_action *))"
.br
.ti -1c
.RI "int \fBss_init\fP ()"
.br
.ti -1c
.RI "int \fBfd_msg_send\fP (struct msg **pmsg, void(*anscb)(void *, struct msg **), void *data)"
.br
.ti -1c
.RI "int \fBfd_msg_send_timeout\fP (struct msg **pmsg, void(*anscb)(void *, struct msg **), void *data, void(*expirecb)(void *, DiamId_t, size_t, struct msg **), const struct timespec *timeout)"
.br
.ti -1c
.RI "int \fBfd_core_shutdown\fP (void)"
.br
.ti -1c
.RI "int \fBfd_core_wait_shutdown_complete\fP (void)"
.br
.ti -1c
.RI "int \fBss_add_avp\fP (\fBavp_or_msg\fP **parent, struct avp *avp)"
.br
.ti -1c
.RI "int \fBss_create_terminal_information\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_active_apn\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_equivalent_plmn_list\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_mip6_agent_info\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_mip_home_agent_host\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_specific_apn_info\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_experimental_result\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_subscription_data\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_lcs_info\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_lcs_privacyexception\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_external_client\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_service_type\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_mo_lr\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_teleservice_list\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_call_barring_info\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_ambr\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_apn_configuration_profile\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_apn_configuration\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_eps_subscribed_qos_profile\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_allocation_retention_priority\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_wlan_offloadability\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_trace_data\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_mdt_configuration\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_area_scope\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_gprs_subscription_data\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_pdp_context\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_csg_subscription_data\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_prose_subscription_data\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_requested_eutran_authentication_info\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_requested_utran_geran_authentication_info\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_authentication_info\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_utran_vector\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_geran_vector\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_eps_user_state\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_mme_user_state\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_eps_location_information\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_mme_location_information\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_user_csg_information\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_local_time_zone\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_create_supported_features\fP (struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_terminal_information\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_active_apn\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_active_apn\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_equivalent_plmn_list\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_mip6_agent_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_mip_home_agent_host\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_specific_apn_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_specific_apn_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_experimental_result\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_subscription_data\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_lcs_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_lcs_privacyexception\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_lcs_privacyexception\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_external_client\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_external_client\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_service_type\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_service_type\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_mo_lr\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_mo_lr\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_teleservice_list\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_call_barring_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_call_barring_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_ambr\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_apn_configuration_profile\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_apn_configuration\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_apn_configuration\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_eps_subscribed_qos_profile\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_allocation_retention_priority\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_wlan_offloadability\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_trace_data\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_mdt_configuration\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_area_scope\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_gprs_subscription_data\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_pdp_context\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_pdp_context\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_csg_subscription_data\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_csg_subscription_data\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_prose_subscription_data\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_requested_eutran_authentication_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_requested_utran_geran_authentication_info\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_authentication_info\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_e_utran_vector\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_e_utran_vector\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_utran_vector\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_utran_vector\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_geran_vector\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_geran_vector\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_eps_user_state\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_mme_user_state\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_eps_location_information\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_mme_location_information\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_user_csg_information\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_local_time_zone\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_supported_features\fP (struct msg *msg, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_get_gavp_next_supported_features\fP (struct avp *avp, struct avp **gavp)"
.br
.ti -1c
.RI "int \fBss_msg_create_answer\fP (struct msg **msg)"
.br
.ti -1c
.RI "int \fBss_msg_create_ulr\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_msg_create_air\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_msg_create_clr\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_msg_create_idr\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_msg_create_dsr\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_msg_create_pur\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_msg_create_rsr\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_msg_create_nor\fP (struct msg **req)"
.br
.ti -1c
.RI "int \fBss_peer_state\fP (char *diam_id, size_t diam_id_len)"
.br
.ti -1c
.RI "int \fBss_set_destination_host\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_origin_host\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_destination_realm\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_origin_realm\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_user_name\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_rat_type\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_ulr_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_ue_srvcc_capability\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_visited_plmn_id\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_sgsn_number\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_homogeneous_support_ims_vop_sessions\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_gmlc_address\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_mme_number_for_mt_sms\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_sms_register_request\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_coupled_node_diameter_id\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_imei\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_software_version\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_3gpp2_meid\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_mip_home_agent_address\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_mip_home_agent_host\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_result_code\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_error_diagnostic\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_ula_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_vendor_id\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_auth_application_id\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_experimental_result_code\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_subscriber_status\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_msisdn\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_a_msisdn\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_stn_sr\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_ics_indicator\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_network_access_mode\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_operator_determined_barring\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_hplmn_odb\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_regional_subscription_zone_code\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_access_restriction_data\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_apn_oi_replacement\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_3gpp_charging_characteristics\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_rat_frequency_selection_priority_id\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_roaming_restricted_unsupported_feature\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_subscribed_periodic_rau_tau_timer\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_mps_priority\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_vplmn_lipa_allowed\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_relay_node_indicator\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_mdt_user_consent\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_subscribed_vsrvcc\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_subscription_data_flags\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_gmlc_number\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_ss_code\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_ss_status\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_notification_ue_user\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_client_identity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_gmlc_restriction\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_plmn_client\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_serviceTypeIdentity\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_ts_code\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_max_requested_bw_ul\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_max_requested_bw_dl\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_all_apn_configuration_included_indicator\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_pdn_type\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_vplmn_dynamic_address_allowed\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_pdn_gw_allocation_type\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_sipto_permission\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_lipa_permission\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_restoration_priority\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_sipto_local_network_permission\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_served_party_ip_address\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_qos_class_identifier\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_priority_level\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_pre_emption_capability\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_pre_emption_vulnerability\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_wlan_offloadability_eutran\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_wlan_offloadability_utran\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_trace_reference\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_trace_depth\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_trace_ne_type_list\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_trace_interface_list\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_trace_event_list\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_omc_id\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_trace_collection_entity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_job_type\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_cell_global_identity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_e_utran_cell_global_identity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_routing_area_identity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_location_area_identity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_tracking_area_identity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_list_of_measurements\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_reporting_trigger\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_report_interval\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_report_amount\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_event_threshold_rsrp\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_event_threshold_rsrq\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_logging_interval\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_logging_duration\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_measurement_period_lte\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_measurement_period_umts\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_collection_period_rmm_lte\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_collection_period_rmm_umts\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_positioning_method\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_measurement_quantity\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_event_threshold_event_1f\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_event_threshold_event_1i\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_mdt_allowed_plmn_id\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_complete_data_list_included_indicator\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_pdp_type\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_pdp_address\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_qos_subscribed\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_ext_pdp_type\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_ext_pdp_address\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_csg_id\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_expiration_date\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_prose_permission\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_reset_id\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_number_of_requested_vectors\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_immediate_response_preferred\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_re_synchronization_info\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_item_number\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_rand\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_xres\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_autn\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_kasme\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_confidentiality_key\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_integrity_key\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_kc\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_sres\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_cancellation_type\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_clr_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_idr_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_ims_voice_over_ps_sessions_supported\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_last_ue_activity_time\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_ida_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_user_state\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_geographical_information\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_geodetic_information\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_current_location_retrieved\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_age_of_location_information\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_csg_access_mode\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_csg_membership_indication\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_time_zone\fP (struct avp **avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_daylight_saving_time\fP (struct avp **avp, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_dsr_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_context_identifier\fP (\fBavp_or_msg\fP **msg_avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_dsa_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_pur_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_pua_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_user_id\fP (struct msg **msg, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_visited_network_identifier\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_service_selection\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"
.br
.ti -1c
.RI "int \fBss_set_alert_reason\fP (struct msg **msg, int32_t val)"
.br
.ti -1c
.RI "int \fBss_set_nor_flags\fP (struct msg **msg, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_feature_list_id\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_set_feature_list\fP (struct avp **avp, uint32_t val)"
.br
.ti -1c
.RI "int \fBss_get_destination_host\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_destination_host_gavp\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_origin_host\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_destination_realm\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_origin_realm\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_destination_realm_gavp\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_user_name\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_rat_type\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_ulr_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_ue_srvcc_capability\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_visited_plmn_id\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_sgsn_number\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_homogeneous_support_ims\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_gmlc_address\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_mme_number_for_mt_sms\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_sms_register_request\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_coupled_node_diameter_id\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_imei\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_software_version\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_3gpp2_meid\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_context_identifier_gavp\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_service_selection_gavp\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_service_selection_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_visited_network_identifier_gavp\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_mip_home_agent_address_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_visited_plmn_id_gavp\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_visited_plmn_id_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_result_code\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_error_diagnostic\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_ula_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_vendor_id\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_experimental_result_code\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_subscriber_status\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_msisdn\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_a_msisdn\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_stn_sr\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_ics_indicator\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_network_access_mode\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_operator_determined_barring\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_hplmn_odb\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_regional_subscription_zone_code\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_access_restriction_data\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_apn_oi_replacement\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_3gpp_charging_characteristics\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_rat_frequency_selection_priority_id\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_roaming_restricted_unsupported_feature\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_subscribed_periodic_rau_tau_timer\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_mps_priority\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_vplmn_lipa_allowed\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_relay_node_indicator\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_mdt_user_consent\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_subscribed_vsrvcc\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_subscription_data_flags\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_gmlc_number\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_ss_code_gavp\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_ss_status\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_notification_ue_user\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_client_identity\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_gmlc_restriction\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_plmn_client_array\fP (struct avp *gavp, int32_t **array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_serviceTypeIdentity\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_ts_code_gavp_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_max_requested_bw_ul\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_max_requested_bw_dl\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_all_apn_configuration_included_indicator\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_pdn_type\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_vplmn_dynamic_address_allowed\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_pdn_gw_allocation_type\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_sipto_permission\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_lipa_permission\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_restoration_priority\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_sipto_local_network_permission\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_served_party_ip_address_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_qos_class_identifier\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_priority_level\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_pre_emption_capability\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_pre_emption_vulnerability\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_wlan_offloadability_eutran\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_wlan_offloadability_utran\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_trace_reference_gavp\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_trace_depth\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_trace_ne_type_list\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_trace_interface_list\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_trace_event_list\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_omc_id\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_trace_collection_entity\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_job_type\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_cell_global_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_e_utran_cell_global_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_routing_area_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_location_area_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_tracking_area_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_list_of_measurements\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_reporting_trigger\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_report_interval\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_report_amount\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_event_threshold_rsrp\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_event_threshold_rsrq\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_logging_interval\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_logging_duration\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_measurement_period_lte\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_measurement_period_umts\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_collection_period_rmm_lte\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_collection_period_rmm_umts\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_positioning_method\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_measurement_quantity\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_event_threshold_event_1f\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_event_threshold_event_1i\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_mdt_allowed_plmn_id\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_complete_data_list_included_indicator\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_pdp_type\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_pdp_address\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_qos_subscribed\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_ext_pdp_type\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_ext_pdp_address\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_csg_id\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_expiration_date\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_prose_permission\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_reset_id_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_number_of_requested_vectors\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_immediate_response_preferred\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_re_synchronization_info\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_item_number\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_rand\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_xres\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_autn\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_kasme\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_confidentiality_key\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_integrity_key\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_kc\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_sres\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_cancellation_type\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_clr_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_idr_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_ims_voice_over_ps_sessions_supported\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_last_ue_activity_time\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_ida_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_user_state\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_geographical_information\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_geodetic_information\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_current_location_retrieved\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_age_of_location_information\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_csg_access_mode\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_csg_membership_indication\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_time_zone\fP (struct avp *gavp, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_daylight_saving_time\fP (struct avp *gavp, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_dsr_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_context_identifier\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_context_identifier_array\fP (struct msg *msg, uint32_t **array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_trace_reference\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_ts_code_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_ss_code_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_dsa_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_pur_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_pua_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_user_id_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"
.br
.ti -1c
.RI "int \fBss_get_visited_network_identifier\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_service_selection\fP (struct msg *msg, unsigned char **val)"
.br
.ti -1c
.RI "int \fBss_get_alert_reason\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_nor_flags\fP (struct msg *msg, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_homogeneous_support_ims_vop_sessions\fP (struct msg *msg, int32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_feature_list_id\fP (struct avp *gavp, uint32_t *val)"
.br
.ti -1c
.RI "int \fBss_get_feature_list\fP (struct avp *gavp, uint32_t *val)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char * \fBss_diameter_conffile_name\fP"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef void \fBavp_or_msg\fP"arguments of this typedef data type should be either 'struct avp *' or 'struct msg *' 
.SH "Function Documentation"
.PP 
.SS "int \fBfd_core_shutdown\fP (void)"Initialize shutdown of the diameter application\&. This is not blocking\&. This function is defined in freedimeter 'libfdcore' library\&.
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
!0 : on failure 
.RE
.PP

.SS "int \fBfd_core_wait_shutdown_complete\fP (void)"Waites untill the diameter application gracefully shuts down\&. This function is should be called when the application is shuting down after function fd_core_shutdown is called to reclaim some resources\&. This function is defined in freedimeter 'libfdcore' library\&.
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
!0 : on failure 
.RE
.PP

.SS "int \fBfd_msg_send\fP (struct msg **pmsg, void(*)(void *, struct msg **)anscb, void *data)"This functions are defined in freediameter 'libfdcore' and the following description is copied from 'libfdcore\&.h' file of freediamter implementation\&.
.PP
FUNCTION: fd_msg_send, fd_msg_send_timeout
.PP
\fBParameters:\fP
.RS 4
\fIpmsg\fP : Location of the message to be sent on the network (set to NULL on function return to avoid double deletion)\&. 
.br
\fIanscb\fP : A callback to be called when corresponding answer is received, when sending a request (not used with answers) 
.br
\fIdata\fP : opaque data to be passed back to the anscb (or expirecb) when it is called\&. DESCRIPTION: Sends a message on the network\&. (actually simply queues it in a global queue, to be picked by a daemon's thread) For requests, the end-to-end id must be set (see fd_msg_get_eteid / MSGFL_ALLOC_ETEID)\&. For answers, the message must be created with function fd_msg_new_answer_from_req\&.
.RE
.PP
The routing module will handle sending to the correct peer, usually based on the Destination-Realm / Destination-Host AVP\&.
.PP
If the msg is a request, there are two ways of receiving the answer:
.IP "\(bu" 2
either having registered a callback in the dispatch module (see fd_disp_register)
.IP "\(bu" 2
or provide a anscb callback here\&. If such callback is provided, it is called before the dispatch callbacks\&. The prototype for this anscb callback function is: void anscb(void * data, struct msg ** answer) where: data : opaque data that was registered along with the callback\&. answer : location of the pointer to the answer\&. note1: on function return, if *answer is not NULL, the message is passed to the dispatch module for regular callbacks\&. otherwise, the callback must take care of freeing the message (fd_msg_free)\&. note2: the opaque data is not freed by the daemon in any case, extensions should ensure clean handling in fd_ext_fini\&.
.PP
.PP
If no callback is registered to handle an answer, the message is discarded and an error is logged\&.
.PP
fd_msg_send_timeout is similar to fd_msg_send, except that it takes two additional arguments 'expirecb' and 'timeout'\&. If the message parameter is an answer, there is no difference with fd_msg_send\&. Otherwise, if the corresponding answer (or error) is received before the timeout date elapses, everything occurs as with fd_msg_send\&. Otherwise, the request is removed from the queue (meaning the matching answer will be discarded upon reception) and passed to the expirecb function\&. Upon return, if the *msg parameter is not NULL, it is freed (not passed to other callbacks)\&. expirecb is called in a dedicated thread\&.
.PP
The prototype for the expirecb callback function is: void expirecb(void * data, struct peer_hdr * sentto, struct msg ** request) where: data : opaque data that was registered along with the callback\&. sentto : pointer to the peer to which the message was sent and no answer received within timeout\&.(check freediameter 'libfdcore\&.h' for detail about the structure of the 'struct peer_hdr') request: location of the pointer to the request that was not answered\&.
.PP
RETURN VALUE: 
.PP
\fBReturns:\fP
.RS 4
0 : The message has been queued for sending (sending may fail asynchronously)\&. 
.PP
EINVAL : A parameter is invalid (ex: anscb provided but message is not a request)\&. \&.\&.\&. 
.RE
.PP

.SS "int \fBfd_msg_send_timeout\fP (struct msg **pmsg, void(*)(void *, struct msg **)anscb, void *data, void(*)(void *, DiamId_t, size_t, struct msg **)expirecb, const struct timespec *timeout)"This functions are defined in freediameter 'libfdcore' and the following description is copied from 'libfdcore\&.h' file of freediamter implementation\&.
.PP
FUNCTION: fd_msg_send_timeout
.PP
\fBParameters:\fP
.RS 4
\fIpmsg\fP : Location of the message to be sent on the network (set to NULL on function return to avoid double deletion)\&. 
.br
\fIanscb\fP : A callback to be called when corresponding answer is received, when sending a request (not used with answers) 
.br
\fIdata\fP : opaque data to be passed back to the anscb (or expirecb) when it is called\&. 
.br
\fIexpirecb\fP : (only for fd_msg_send_timeout) If the request did not get an answer before timeout, this callback is called\&. 
.br
\fItimeout\fP : (only for fd_msg_send_timeout) sets the absolute time until when to wait for an answer\&. Past this time, the expirecb is called with the request and the answer will be discarded if received later\&.
.RE
.PP
DESCRIPTION: Sends a message on the network\&. (actually simply queues it in a global queue, to be picked by a daemon's thread) For requests, the end-to-end id must be set (see fd_msg_get_eteid / MSGFL_ALLOC_ETEID)\&. For answers, the message must be created with function fd_msg_new_answer_from_req\&.
.PP
The routing module will handle sending to the correct peer, usually based on the Destination-Realm / Destination-Host AVP\&.
.PP
If the msg is a request, there are two ways of receiving the answer:
.IP "\(bu" 2
either having registered a callback in the dispatch module (see fd_disp_register)
.IP "\(bu" 2
or provide a anscb callback here\&. If such callback is provided, it is called before the dispatch callbacks\&. The prototype for this anscb callback function is: void anscb(void * data, struct msg ** answer) where: data : opaque data that was registered along with the callback\&. answer : location of the pointer to the answer\&. note1: on function return, if *answer is not NULL, the message is passed to the dispatch module for regular callbacks\&. otherwise, the callback must take care of freeing the message (fd_msg_free)\&. note2: the opaque data is not freed by the daemon in any case, extensions should ensure clean handling in fd_ext_fini\&.
.PP
.PP
If no callback is registered to handle an answer, the message is discarded and an error is logged\&.
.PP
fd_msg_send_timeout is similar to fd_msg_send, except that it takes two additional arguments 'expirecb' and 'timeout'\&. If the message parameter is an answer, there is no difference with fd_msg_send\&. Otherwise, if the corresponding answer (or error) is received before the timeout date elapses, everything occurs as with fd_msg_send\&. Otherwise, the request is removed from the queue (meaning the matching answer will be discarded upon reception) and passed to the expirecb function\&. Upon return, if the *msg parameter is not NULL, it is freed (not passed to other callbacks)\&. expirecb is called in a dedicated thread\&.
.PP
The prototype for the expirecb callback function is: void expirecb(void * data, struct peer_hdr * sentto, struct msg ** request) where: data : opaque data that was registered along with the callback\&. sentto : pointer to the peer to which the message was sent and no answer received within timeout\&.(check freediameter 'libfdcore\&.h' for detail about the structure of the 'struct peer_hdr') request: location of the pointer to the request that was not answered\&.
.PP
RETURN VALUE: 
.PP
\fBReturns:\fP
.RS 4
0 : The message has been queued for sending (sending may fail asynchronously)\&. 
.PP
EINVAL : A parameter is invalid (ex: anscb provided but message is not a request)\&. \&.\&.\&. 
.RE
.PP

.SS "int \fBss_add_avp\fP (\fBavp_or_msg\fP **parent, struct avp *avp)"Add AVP to message structure or group AVP\&. The prupose of this function is to add an AVP of typed grouped to its parent which could be a message or an AVP of typed group\&. For AVP of type other than a group use the 'ss_set_*' functions to set the value and add it to its parent\&.
.PP
\fBParameters:\fP
.RS 4
\fIparent,:\fP the message structure or group AVP in to which the AVP will be added 
.br
\fIavp,:\fP the AVP that is to be added in to the message structure or group AVP\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success 
.PP
1 on failure 
.RE
.PP

.SS "int \fBss_create_active_apn\fP (struct avp **gavp)"Creates a new Active-APN AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_allocation_retention_priority\fP (struct avp **gavp)"Creates a new Allocation-Retention-Priority AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_ambr\fP (struct avp **gavp)"Creates a new AMBR AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_apn_configuration\fP (struct avp **gavp)"Creates a new APN-Configuration AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_apn_configuration_profile\fP (struct avp **gavp)"Creates a new APN-Configuration-Profile AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_area_scope\fP (struct avp **gavp)"Creates a new Area-Scope AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_authentication_info\fP (struct avp **gavp)"Creates a new Authentication-Info AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_call_barring_info\fP (struct avp **gavp)"Creates a new Call-Barring-Info AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_csg_subscription_data\fP (struct avp **gavp)"Creates a new CSG-Subscription-Data AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_eps_location_information\fP (struct avp **gavp)"Creates a new EPS-Location-Information AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_eps_subscribed_qos_profile\fP (struct avp **gavp)"Creates a new EPS-Subscribed-QoS-Profile AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_eps_user_state\fP (struct avp **gavp)"Creates a new EPS-User-State AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_equivalent_plmn_list\fP (struct avp **gavp)"Creates a new Equivalent-PLMN-List AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_experimental_result\fP (struct avp **gavp)"Creates a new Experimental-Result AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_external_client\fP (struct avp **gavp)"Creates a new External-Client AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_geran_vector\fP (struct avp **gavp)"Creates a new GERAN-Vector AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_gprs_subscription_data\fP (struct avp **gavp)"Creates a new GPRS-Subscription-Data AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_lcs_info\fP (struct avp **gavp)"Creates a new LCS-Info AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_lcs_privacyexception\fP (struct avp **gavp)"Creates a new LCS-PrivacyException AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_local_time_zone\fP (struct avp **gavp)"Creates a new Local-Time-Zone AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_mdt_configuration\fP (struct avp **gavp)"Creates a new MDT-Configuration AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_mip6_agent_info\fP (struct avp **gavp)"Creates a new MIP6-Agent-Info AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_mip_home_agent_host\fP (struct avp **gavp)"Creates MIP-Home-Agent-Host AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) @return EINVAL : A parameter is invalid\&. 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_mme_location_information\fP (struct avp **gavp)"Creates a new MME-Location-Information AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_mme_user_state\fP (struct avp **gavp)"Creates a new MME-User-State AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_mo_lr\fP (struct avp **gavp)"Creates a new MO-LR AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_pdp_context\fP (struct avp **gavp)"Creates a new PDP-Context AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_prose_subscription_data\fP (struct avp **gavp)"Creates a new ProSe-Subscription-Data AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_requested_eutran_authentication_info\fP (struct avp **gavp)"Creates a new Requested-EUTRAN-Authentication-Info AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_requested_utran_geran_authentication_info\fP (struct avp **gavp)"Creates a new Requested-UTRAN-GERAN-Authentication-Info AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_service_type\fP (struct avp **gavp)"Creates a new Service-Type AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_specific_apn_info\fP (struct avp **gavp)"Creates a new Specific-APN-Info AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_subscription_data\fP (struct avp **gavp)"Creates a new Subscription-Data AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_supported_features\fP (struct avp **gavp)"Creates a new Supported-Features AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_teleservice_list\fP (struct avp **gavp)"Creates a new Teleservice-List AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_terminal_information\fP (struct avp **gavp)"Creates a new Terminal-Information AVP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success 
.PP
1 on failure 
.RE
.PP

.SS "int \fBss_create_trace_data\fP (struct avp **gavp)"Creates a new Trace-Data AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_user_csg_information\fP (struct avp **gavp)"Creates a new User-CSG-Information AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_utran_vector\fP (struct avp **gavp)"Creates a new UTRAN-Vector AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_create_wlan_offloadability\fP (struct avp **gavp)"Creates a new WLAN-offloadability AVP instance
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP structure pointer which will point to the new instance upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP instance is created (success) 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_get_3gpp2_meid\fP (struct avp *gavp, unsigned char **val)"Retrieves 3gpp2-meid AVP value from AVP of type grouped\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains 3gpp2-meid AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_3gpp_charging_characteristics\fP (struct avp *gavp, unsigned char **val)"Retrieves 3GPP-Charging-Characteristics AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains 3GPP-Charging-Characteristics AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_a_msisdn\fP (struct avp *gavp, unsigned char **val)"Retrieves A-MSISDN AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains A-MSISDN AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_access_restriction_data\fP (struct avp *gavp, uint32_t *val)"Retrieves Access-Restriction-Data AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Access-Restriction-Data AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_age_of_location_information\fP (struct avp *gavp, uint32_t *val)"Retrieves Age-Of-Location-Information AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Age-Of-Location-Information AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_alert_reason\fP (struct msg *msg, int32_t *val)"valrieves Alert-Reason AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Alert-Reason AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_all_apn_configuration_included_indicator\fP (struct avp *gavp, int32_t *val)"Retrieves All-APN-Configurations-Included-Indicator AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains All-APN-Configurations-Included-Indicator AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_apn_oi_replacement\fP (struct avp *gavp, unsigned char **val)"Retrieves APN-OI-Replacement AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains APN-OI-Replacement AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_autn\fP (struct avp *gavp, unsigned char **val)"Retrieves AUTN AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains AUTN AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_cancellation_type\fP (struct msg *msg, int32_t *val)"Retrieves Cancellation-Type AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Cancellation-Type AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_cell_global_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Cell-Global-Identity AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple Cell-Global-Identity AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_client_identity\fP (struct avp *gavp, unsigned char **val)"Retrieves Client-Identity AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Client-Identity AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_clr_flags\fP (struct msg *msg, uint32_t *val)"Retrieves CLR-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains CLR-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_collection_period_rmm_lte\fP (struct avp *gavp, int32_t *val)"Retrieves Collection-Period-RMM-LTE AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Collection-Period-RMM-LTE AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_collection_period_rmm_umts\fP (struct avp *gavp, int32_t *val)"Retrieves Collection-Period-RRM-UMTS AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Collection-Period-RRM-UMTS AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_complete_data_list_included_indicator\fP (struct avp *gavp, int32_t *val)"Retrieves Complete-Data-List-Included-Indicator AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Complete-Data-List-Included-Indicator AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_confidentiality_key\fP (struct avp *gavp, unsigned char **val)"Retrieves Confidentiality-Key AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Confidentiality-Key AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_context_identifier\fP (struct msg *msg, uint32_t *val)"Retrieves Context-Identifier AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Context-Identifier AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_context_identifier_array\fP (struct msg *msg, uint32_t **array_ret, size_t *array_size)"Retrieves multiple Context-Identifier AVPs' values from message\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains multiple Context-Identifier AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_context_identifier_gavp\fP (struct avp *gavp, uint32_t *val)"Retrieves Context-Identifier AVP value from AVP of type grouped\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Context-Identifier AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_coupled_node_diameter_id\fP (struct msg *msg, unsigned char **val)"Retrieves Coupled-Node-Diameter-ID AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Coupled-Node-Diameter-ID AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_csg_access_mode\fP (struct avp *gavp, int32_t *val)"Retrieves CSG-Access-Mode AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains CSG-Access-Mode AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_csg_id\fP (struct avp *gavp, uint32_t *val)"Retrieves CSG-Id AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains CSG-Id AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_csg_membership_indication\fP (struct avp *gavp, int32_t *val)"Retrieves CSG-Membership-Indication AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains CSG-Membership-Indication AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_current_location_retrieved\fP (struct avp *gavp, int32_t *val)"Retrieves Current-Location-Retrieved AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Current-Location-Retrieved AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_daylight_saving_time\fP (struct avp *gavp, int32_t *val)"Retrieves Daylight-Saving-Time AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Daylight-Saving-Time AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_destination_host\fP (struct msg *msg, unsigned char **val)"Retrieves Destination-Host AVP value(diameter id) from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Destination-Host AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_destination_host_gavp\fP (struct avp *gavp, unsigned char **val)"Retrieves Destination-Host AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of typed grouped which contains Destination-Host AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_destination_realm\fP (struct msg *msg, unsigned char **val)"Retrieves Destination-Realm AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Destination-Realm AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_destination_realm_gavp\fP (struct avp *gavp, unsigned char **val)"Retrieves Destination-Realm AVP value from group Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of typed grouped which contains Destination-Realm AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_dsa_flags\fP (struct msg *msg, uint32_t *val)"Retrieves DSA-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains DSA-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_dsr_flags\fP (struct msg *msg, uint32_t *val)"Retrieves DSR-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains DSR-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_e_utran_cell_global_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple E-UTRAN-Cell-Global-Identity AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple E-UTRAN-Cell-Global-Identity AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_error_diagnostic\fP (struct msg *msg, int32_t *val)"Retrieves Error-Diagnostic AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Error-Diagnostic AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_event_threshold_event_1f\fP (struct avp *gavp, uint32_t *val)"Retrieves Event-Threshold-Event-1F AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Event-Threshold-Event-1F AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_event_threshold_event_1i\fP (struct avp *gavp, uint32_t *val)"Retrieves Event-Threshold-Event-1I AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Event-Threshold-Event-1I AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_event_threshold_rsrp\fP (struct avp *gavp, uint32_t *val)"Retrieves Event-Threshold-RSRP AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Event-Threshold-RSRP AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_event_threshold_rsrq\fP (struct avp *gavp, uint32_t *val)"Retrieves Event-Threshold-RSRQ AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Event-Threshold-RSRQ AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_experimental_result_code\fP (struct avp *gavp, uint32_t *val)"Retrieves Experimental-Result-Code AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Experimental-Result-Code AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_expiration_date\fP (struct avp *gavp, unsigned char **val)"Retrieves Expiration-Date AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Expiration-Date AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ext_pdp_address\fP (struct avp *gavp, unsigned char **val)"Retrieves Ext-PDP-Address AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Ext-PDP-Address AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ext_pdp_type\fP (struct avp *gavp, unsigned char **val)"Retrieves Ext-PDP-Type AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Ext-PDP-Type AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_feature_list\fP (struct avp *gavp, uint32_t *val)"valrieves Feature-List AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Feature-List AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_feature_list_id\fP (struct avp *gavp, uint32_t *val)"valrieves Feature-List-ID AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Feature-List-ID AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_gavp_active_apn\fP (struct msg *msg, struct avp **gavp)"Retrieves the first Active-APN AVP from message 
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in which Active-APN AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Active-APN AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_allocation_retention_priority\fP (struct avp *avp, struct avp **gavp)"Retrieves the Allocation-Retention-Priority AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which Allocation-Retention-Priority AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Allocation-Retention-Priority AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_ambr\fP (struct avp *avp, struct avp **gavp)"Retrieves AMBR AVP from AVP of type grouped 'avp' 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which AMBR AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to AMBR AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_apn_configuration\fP (struct avp *avp, struct avp **gavp)"Retrieves the first APN-Configuration AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which APN-Configuration AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to APN-Configuration AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_apn_configuration_profile\fP (struct avp *avp, struct avp **gavp)"Retrieves APN-Configuration-Profile AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which APN-Configuration-Profile AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to APN-Configuration-Profile AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_area_scope\fP (struct avp *avp, struct avp **gavp)"Retrieves the Area-Scope AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which Area-Scope AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Area-Scope AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_authentication_info\fP (struct msg *msg, struct avp **gavp)"Retrieves Authentication-Info group AVP from message 
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in to which Authentication-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Authentication-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_call_barring_info\fP (struct avp *avp, struct avp **gavp)"Retrieves the first Call-Barring-Info AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which Call-Barring-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Call-Barring-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_csg_subscription_data\fP (struct avp *avp, struct avp **gavp)"Retrieves the first CSG-Subscription-Data AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which CSG-Subscription-Data AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to CSG-Subscription-Data AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_e_utran_vector\fP (struct avp *avp, struct avp **gavp)"Retrieves the first E-UTRAN-Vector AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which E-UTRAN-Vector AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to E-UTRAN-Vector AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_eps_location_information\fP (struct msg *msg, struct avp **gavp)"Retrieves the first EPS-Location-Information AVP from message\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in to which EPS-Location-Information AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to EPS-Location-Information AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_eps_subscribed_qos_profile\fP (struct avp *avp, struct avp **gavp)"Retrieves the EPS-Subscribed-QoS-Profile AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which EPS-Subscribed-QoS-Profile AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to EPS-Subscribed-QoS-Profile AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_eps_user_state\fP (struct msg *msg, struct avp **gavp)"Retrievs the EPS-User-State AVP from message\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in to which EPS-User-State AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to EPS-User-State AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_equivalent_plmn_list\fP (struct msg *msg, struct avp **gavp)"Retrieves Equivalent-PLMN-List AVP from message 
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in which Equivalent-PLMN-List AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Equivalent-PLMN-List AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_experimental_result\fP (struct msg *msg, struct avp **gavp)"Retrieves Experimental-Result AVP from message 
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in which Experimental-Result AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Experimental-Result AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_external_client\fP (struct avp *avp, struct avp **gavp)"Retrieves the first External-Client AVP from AVP of type grouped 'avp' 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which External-Client AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to External-Client AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_geran_vector\fP (struct avp *avp, struct avp **gavp)"Retrieves the first GERAN-Vector AVP from AVP of type grouped\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which GERAN-Vector AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to GERAN-Vector AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_gprs_subscription_data\fP (struct avp *avp, struct avp **gavp)"Retrieves the GPRS-Subscription-Data AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which GPRS-Subscription-Data AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to GPRS-Subscription-Data AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_lcs_info\fP (struct avp *avp, struct avp **gavp)"Retrieves LCS-Info AVP from AVP of type grouped 'avp' 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in which LCS-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to LCS-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_lcs_privacyexception\fP (struct avp *avp, struct avp **gavp)"Retrieves the first LCS-PrivacyException AVP from AVP of type grouped 'avp' 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in which LCS-PrivacyException AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to LCS-PrivacyException AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_local_time_zone\fP (struct msg *msg, struct avp **gavp)"Retrievs the first Local-Time-Zone AVP from message\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in to which Local-Time-Zone AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Local-Time-Zone AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_mdt_configuration\fP (struct avp *avp, struct avp **gavp)"Retrieves the MDT-Configuration AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which MDT-Configuration AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to MDT-Configuration AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_mip6_agent_info\fP (struct avp *avp, struct avp **gavp)"Retrieves MIP6-Agent-Info AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in which MIP6-Agent-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to MIP6-Agent-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_mip_home_agent_host\fP (struct avp *avp, struct avp **gavp)"Retrieves MIP-Home-Agent-Host AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in which MIP-Home-Agent-Host AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to MIP-Home-Agent-Host AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_mme_location_information\fP (struct avp *avp, struct avp **gavp)"Retrieves the first MME-Location-Information AVP from AVP of type grouped\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which MME-Location-Information AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to MME-Location-Information AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_mme_user_state\fP (struct avp *avp, struct avp **gavp)"Retrievs the MME-User-State AVP from AVP of type grouped\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which EPS-User-State AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to EPS-User-State AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_mo_lr\fP (struct avp *avp, struct avp **gavp)"Retrieves the first MO-LR AVP from AVP of type grouped 'avp' 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which MO-LR AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to MO-LR AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_active_apn\fP (struct avp *avp, struct avp **gavp)"Retrieves the next Active-APN AVP next to the given AVP 'avp' parameter:
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to Active-APN AVP next to which the next Active-APN AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Active-APN AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_apn_configuration\fP (struct avp *avp, struct avp **gavp)"Retrieves the next APN-Configuration AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to APN-Configuration AVP next to which APN-Configuration AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to APN-Configuration AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_call_barring_info\fP (struct avp *avp, struct avp **gavp)"Retrieves the next Call-Barring-Info AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to Call-Barring-Info AVP next to which Call-Barring-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Call-Barring-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_csg_subscription_data\fP (struct avp *avp, struct avp **gavp)"Retrieves the next CSG-Subscription-Data group AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to CSG-Subscription-Data AVP next to which CSG-Subscription-Data AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to CSG-Subscription-Data AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_e_utran_vector\fP (struct avp *avp, struct avp **gavp)"Retrieves the next E-UTRAN-Vector group AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to E-UTRAN-Vector AVP next to which E-UTRAN-Vector AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to E-UTRAN-Vector AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_external_client\fP (struct avp *avp, struct avp **gavp)"Retrieves the next External-Client group AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to External-Client AVP next to which External-Client AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to External-Client AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_geran_vector\fP (struct avp *avp, struct avp **gavp)"Retrieves the next GERAN-Vector AVP\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to GERAN-Vector AVP next to which GERAN-Vector AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to GERAN-Vector AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_lcs_privacyexception\fP (struct avp *avp, struct avp **gavp)"Retrieves the next LCS-PrivacyException AVP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to LCS-PrivacyException AVP next to which LCS-PrivacyException AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to LCS-PrivacyException AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_mo_lr\fP (struct avp *avp, struct avp **gavp)"Retrieves the next MO-LR group AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to MO-LR AVP next to which Service-Type AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Service-Type AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_pdp_context\fP (struct avp *avp, struct avp **gavp)"Retrieves the next PDP-Context group AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to PDP-Context AVP next to which PDP-Context AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to PDP-Context AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_service_type\fP (struct avp *avp, struct avp **gavp)"Retrieves the next Service-Type AVP 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to Service-Type AVP next to which Service-Type AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Service-Type AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_specific_apn_info\fP (struct avp *avp, struct avp **gavp)"Retrieves the next Specific-APN-Info AVP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to Specific-APN-Info AVP next to which Specific-APN-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to the next Specific-APN-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_next_supported_features\fP (struct avp *avp, struct avp **gavp)"
.SS "int \fBss_get_gavp_next_utran_vector\fP (struct avp *avp, struct avp **gavp)"Retrieves the next UTRAN-Vector group AVP\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to UTRAN-Vector AVP next to which UTRAN-Vector AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to UTRAN-Vector AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_pdp_context\fP (struct avp *avp, struct avp **gavp)"Retrieves the first PDP-Context AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which PDP-Context AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to PDP-Context AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_prose_subscription_data\fP (struct avp *avp, struct avp **gavp)"Retrieves ProSe-Subscription-Data AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which ProSe-Subscription-Data AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to ProSe-Subscription-Data AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_requested_eutran_authentication_info\fP (struct avp *avp, struct avp **gavp)"Retrieves Requested-EUTRAN-Authentication-Info AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which Requested-EUTRAN-Authentication-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Requested-EUTRAN-Authentication-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_requested_utran_geran_authentication_info\fP (struct avp *avp, struct avp **gavp)"Retrieves Requested-UTRAN-GERAN-Authentication-Info AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which Requested-UTRAN-GERAN-Authentication-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Requested-UTRAN-GERAN-Authentication-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_service_type\fP (struct avp *avp, struct avp **gavp)"Retrieves the first Service-Type AVP from AVP of type grouped 'avp' 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which Service-Type AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Service-Type AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_specific_apn_info\fP (struct avp *avp, struct avp **gavp)"Retrieves the first Specific-APN-Info AVP from AVP of type grouped 'avp' 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in which Specific-APN-Info AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Specific-APN-Info AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_subscription_data\fP (struct msg *msg, struct avp **gavp)"Retrieves Subscription-Data AVP from message 
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in which Subscription-Data AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Subscription-Data AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_supported_features\fP (struct msg *msg, struct avp **gavp)"Retrieves the first Supported-Features AVP from message\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in to which Supported-Features AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Supported-Features AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_teleservice_list\fP (struct avp *avp, struct avp **gavp)"Retrieves the first Teleservice-List AVP from AVP of type grouped 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which Teleservice-List AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Teleservice-List AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_terminal_information\fP (struct msg *msg, struct avp **gavp)"Retrieves Terminal-Information AVP from message 
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure in which Terminal-Information AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to Terminal-Information AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_trace_data\fP (struct avp *avp, struct avp **gavp)"Retrieves the first Trace-Data AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which APN-Configuration AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to APN-Configuration AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_user_csg_information\fP (struct avp *avp, struct avp **gavp)"Retrievs the first User-CSG-Information AVP from AVP of type grouped\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which User-CSG-Information AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to User-CSG-Information AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_utran_vector\fP (struct avp *avp, struct avp **gavp)"Retrieves the first UTRAN-Vector AVP from AVP of type grouped\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which UTRAN-Vector AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to UTRAN-Vector AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_gavp_wlan_offloadability\fP (struct avp *avp, struct avp **gavp)"Retrieves the WLAN-offloadability AVP from AVP of type grouped\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : a pointer to an AVP of typed grouped in to which WLAN-offloadability AVP is searched\&. 
.br
\fIgavp\fP : a pointer to an instance of 'struct avp' pointer which will point to WLAN-offloadability AVP upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found (success) 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found, and *gavp is set to NULL\&. 
.RE
.PP

.SS "int \fBss_get_geodetic_information\fP (struct avp *gavp, unsigned char **val)"Retrieves Geodetic-Information AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Geodetic-Information AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_geographical_information\fP (struct avp *gavp, unsigned char **val)"Retrieves Geographical-Information AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Geographical-Information AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_gmlc_address\fP (struct msg *msg, unsigned char **val)"Retrieves GMLC-Address AVP value from message \&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains GMLC-Address AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_gmlc_number\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple GMLC-Number AVPs value from group AVP \&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple GMLC-Number AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_gmlc_restriction\fP (struct avp *gavp, int32_t *val)"Retrieves GMLC-Restriction AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains GMLC-Restriction AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_homogeneous_support_ims\fP (struct msg *msg, int32_t *val)"Retrieves Homogeneous-Support-of-IMS-Voice-Over-PS-Session AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Homogeneous-Support-of-IMS-Voice-Over-PS-Session AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_homogeneous_support_ims_vop_sessions\fP (struct msg *msg, int32_t *val)"valrieves Homogeneous-Support-of-IMS-Voice-Over-PS-Sessions AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Homogeneous-Support-of-IMS-Voice-Over-PS-Sessions AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_hplmn_odb\fP (struct avp *gavp, uint32_t *val)"Retrieves HPLMN-ODB AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains HPLMN-ODB AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ics_indicator\fP (struct avp *gavp, int32_t *val)"Retrieves ICS-Indicator AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains ICS-Indicator AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ida_flags\fP (struct msg *msg, uint32_t *val)"Retrieves IDA-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains IDA-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_idr_flags\fP (struct msg *msg, uint32_t *val)"Retrieves IDR-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains IDR-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_imei\fP (struct avp *gavp, unsigned char **val)"Retrieves IMEI AVP value from AVP of type grouped\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains IMEI AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_immediate_response_preferred\fP (struct avp *gavp, uint32_t *val)"Retrieves Immediate-Response-Preferred AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Immediate-Response-Preferred AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. int \fBss_get_immediate_response_preferred(struct avp *gavp, uint32_t *val)\fP; 
.RE
.PP

.SS "int \fBss_get_ims_voice_over_ps_sessions_supported\fP (struct msg *msg, int32_t *val)"Retrieves IMS-Voice-Over-PS-Sessions-Supported AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains IMS-Voice-Over-PS-Sessions-Supported AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_integrity_key\fP (struct avp *gavp, unsigned char **val)"Retrieves Integrity-Key AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Integrity-Key AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_item_number\fP (struct avp *gavp, uint32_t *val)"Retrieves Item-Number AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Item-Number AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_job_type\fP (struct avp *gavp, int32_t *val)"Retrieves Job-Type AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Job-Type AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_kasme\fP (struct avp *gavp, unsigned char **val)"Retrieves KASME AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains KASME AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_kc\fP (struct avp *gavp, unsigned char **val)"Retrieves Kc AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Kc AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_last_ue_activity_time\fP (struct msg *msg, unsigned char **val)"Retrieves Last-UE-Activity-Time AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Last-UE-Activity-Time AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_lipa_permission\fP (struct avp *gavp, int32_t *val)"Retrieves LIPA-Permission AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains LIPA-Permission AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_list_of_measurements\fP (struct avp *gavp, uint32_t *val)"Retrieves List-Of-Measurements AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains List-Of-Measurements AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_location_area_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Location-Area-Identity AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple Location-Area-Identity AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_logging_duration\fP (struct avp *gavp, int32_t *val)"Retrieves Logging-Duration AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Logging-Duration AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_logging_interval\fP (struct avp *gavp, int32_t *val)"Retrieves Logging-Interval AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Logging-Interval AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_max_requested_bw_dl\fP (struct avp *gavp, uint32_t *val)"Retrieves Max-Requested-Bandwidth-DL AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Max-Requested-Bandwidth-DL AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_max_requested_bw_ul\fP (struct avp *gavp, uint32_t *val)"Retrieves Max-Requested-Bandwidth-UL AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Max-Requested-Bandwidth-UL AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_mdt_allowed_plmn_id\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple MDT-Allowed-PLMN-Id AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple MDT-Allowed-PLMN-Id AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_mdt_user_consent\fP (struct avp *gavp, int32_t *val)"Retrieves MDT-User-Consent AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains MDT-User-Consent AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_measurement_period_lte\fP (struct avp *gavp, int32_t *val)"Retrieves Measurement-Period-LTE AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Measurement-Period-LTE AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_measurement_period_umts\fP (struct avp *gavp, int32_t *val)"Retrieves Measurement-Period-UMTS AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Measurement-Period-UMTS AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_measurement_quantity\fP (struct avp *gavp, unsigned char **val)"Retrieves Measurement-Quantity AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Measurement-Quantity AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_mip_home_agent_address_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple MIP-Home-Agent-Address AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple MIP-Home-Agent-Address AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_mme_number_for_mt_sms\fP (struct msg *msg, unsigned char **val)"Retrieves MME-Number-for-MT-SMS AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains MME-Number-for-MT-SMS AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_mps_priority\fP (struct avp *gavp, uint32_t *val)"Retrieves MPS-Priority AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains MPS-Priority AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_msisdn\fP (struct avp *gavp, unsigned char **val)"Retrieves MSISDN AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains MSISDN AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_network_access_mode\fP (struct avp *gavp, int32_t *val)"Retrieves Network-Access-Mode AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Network-Access-Mode AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_nor_flags\fP (struct msg *msg, uint32_t *val)"valrieves NOR-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains NOR-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_notification_ue_user\fP (struct avp *gavp, int32_t *val)"Retrieves Notification-To-UE-User AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Notification-To-UE-User AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_number_of_requested_vectors\fP (struct avp *gavp, uint32_t *val)"Retrieves Number-Of-Requested-Vectors AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Number-Of-Requested-Vectors AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_omc_id\fP (struct avp *gavp, unsigned char **val)"Retrieves OMC-Id AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains OMC-Id AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_operator_determined_barring\fP (struct avp *gavp, uint32_t *val)"Retrieves Operator-Determined-Barring AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Operator-Determined-Barring AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_origin_host\fP (struct msg *msg, unsigned char **val)"Retrieves Origin-Host AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Origin-Host AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_origin_realm\fP (struct msg *msg, unsigned char **val)"Retrieves Origin-Realm AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Origin-Realm AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pdn_gw_allocation_type\fP (struct avp *gavp, int32_t *val)"Retrieves PDN-GW-Allocation-Type AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains PDN-GW-Allocation-Type AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pdn_type\fP (struct avp *gavp, int32_t *val)"Retrieves PDN-Type AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains PDN-Type AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pdp_address\fP (struct avp *gavp, unsigned char **val)"Retrieves PDP-Address AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains PDP-Address AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pdp_type\fP (struct avp *gavp, unsigned char **val)"Retrieves PDP-Type AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains PDP-Type AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_plmn_client_array\fP (struct avp *gavp, int32_t **array_ret, size_t *array_size)"Retrieves multiple PLMN-Client AVPs value from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the *array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple PLMN-Client AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in *array_ret\&. 
.br
\fIarray_size\fP : the number of values written to *array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to *array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_positioning_method\fP (struct avp *gavp, unsigned char **val)"Retrieves Positioning-Method AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Positioning-Method AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pre_emption_capability\fP (struct avp *gavp, int32_t *val)"Retrieves Pre-emption-Capability AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Pre-emption-Capability AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pre_emption_vulnerability\fP (struct avp *gavp, int32_t *val)"Retrieves Pre-emption-Vulnerability AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Pre-emption-Vulnerability AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_priority_level\fP (struct avp *gavp, uint32_t *val)"Retrieves Priority-Level AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Priority-Level AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_prose_permission\fP (struct avp *gavp, uint32_t *val)"Retrieves ProSe-Permission AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains ProSe-Permission AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pua_flags\fP (struct msg *msg, uint32_t *val)"Retrieves PUA-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains PUA-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_pur_flags\fP (struct msg *msg, uint32_t *val)"Retrieves PUR-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains PUR-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_qos_class_identifier\fP (struct avp *gavp, int32_t *val)"Retrieves QoS-Class-Identifier AVP value from group AVPUpon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains QoS-Class-Identifier AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_qos_subscribed\fP (struct avp *gavp, unsigned char **val)"Retrieves QoS-Subscribed AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains QoS-Subscribed AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_rand\fP (struct avp *gavp, unsigned char **val)"Retrieves RAND AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains RAND AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_rat_frequency_selection_priority_id\fP (struct avp *gavp, uint32_t *val)"Retrieves RAT-Frequency-Selection-Priority-ID AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains RAT-Frequency-Selection-Priority-ID AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_rat_type\fP (struct msg *msg, int32_t *val)"Retrieves RAT-Type AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains RAT-Type AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_re_synchronization_info\fP (struct avp *gavp, unsigned char **val)"Retrieves Re-synchronization-Info AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Re-synchronization-Info AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_regional_subscription_zone_code\fP (struct avp *gavp, unsigned char **val)"Retrieves Regional-Subscription-Zone-Code AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Regional-Subscription-Zone-Code AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_relay_node_indicator\fP (struct avp *gavp, int32_t *val)"Retrieves Relay-Node-Indicator AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Relay-Node-Indicator AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_report_amount\fP (struct avp *gavp, int32_t *val)"Retrieves Report-Amount AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Report-Amount AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_report_interval\fP (struct avp *gavp, int32_t *val)"Retrieves Report-Interval AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Report-Interval AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_reporting_trigger\fP (struct avp *gavp, uint32_t *val)"Retrieves Reporting-Trigger AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Reporting-Trigger AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_reset_id_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Reset-ID AVPs' values from message\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains multiple Reset-ID AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_restoration_priority\fP (struct avp *gavp, uint32_t *val)"Retrieves Restoration-Priority AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Restoration-Priority AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_result_code\fP (struct msg *msg, uint32_t *val)"Retrieves Result-Code AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Result-Code AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_roaming_restricted_unsupported_feature\fP (struct avp *gavp, int32_t *val)"Retrieves Roaming-Restricted-Due-To-Unsupported-Feature AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Roaming-Restricted-Due-To-Unsupported-Feature AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_routing_area_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Routing-Area-Identity AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple Routing-Area-Identity AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_served_party_ip_address_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Served-Party-IP-Address AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple Served-Party-IP-Address AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_service_selection\fP (struct msg *msg, unsigned char **val)"
.SS "int \fBss_get_service_selection_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Service-Selection AVPs' values from AVP of type grouped\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple Service-Selection AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_service_selection_gavp\fP (struct avp *gavp, unsigned char **val)"Retrieves Service-Selection AVP value from AVP of type grouped\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Service-Selection AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_serviceTypeIdentity\fP (struct avp *gavp, uint32_t *val)"
.SS "int \fBss_get_sgsn_number\fP (struct msg *msg, unsigned char **val)"Retrieves SGSN-Number AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains ULR-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_sipto_local_network_permission\fP (struct avp *gavp, int32_t *val)"Retrieves SIPTO-Local-Network-Permission AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains SIPTO-Local-Network-Permission AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_sipto_permission\fP (struct avp *gavp, int32_t *val)"Retrieves SIPTO-Permission AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains SIPTO-Permission AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_sms_register_request\fP (struct msg *msg, int32_t *val)"Retrieves SMS-Register-Request AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains SMS-Register-Request AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_software_version\fP (struct avp *gavp, unsigned char **val)"Retrieves Software-Version AVP value from AVP of type grouped\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Software-Version AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_sres\fP (struct avp *gavp, unsigned char **val)"Retrieves SRES AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains SRES AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ss_code_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple SS-Code AVPs value from message\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains multiple SS-Code AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_ss_code_gavp\fP (struct avp *gavp, unsigned char **val)"Retrieves SS-Code AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains SS-Code AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ss_status\fP (struct avp *gavp, unsigned char **val)"Retrieves SS-Status AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains SS-Status AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_stn_sr\fP (struct avp *gavp, unsigned char **val)"Retrieves STN-SR AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains STN-SR AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_subscribed_periodic_rau_tau_timer\fP (struct avp *gavp, uint32_t *val)"Retrieves Subscribed-Periodic-RAU-TAU-Timer AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Subscribed-Periodic-RAU-TAU-Timer AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_subscribed_vsrvcc\fP (struct avp *gavp, int32_t *val)"
.SS "int \fBss_get_subscriber_status\fP (struct avp *gavp, int32_t *val)"Retrieves Subscriber-Status AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Subscriber-Status AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_subscription_data_flags\fP (struct avp *gavp, uint32_t *val)"
.SS "int \fBss_get_time_zone\fP (struct avp *gavp, unsigned char **val)"Retrieves Time-Zone AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Time-Zone AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_trace_collection_entity\fP (struct avp *gavp, unsigned char **val)"Retrieves Trace-Collection-Entity AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Trace-Collection-Entity AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_trace_depth\fP (struct avp *gavp, int32_t *val)"Retrieves Trace-Depth AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Trace-Depth AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_trace_event_list\fP (struct avp *gavp, unsigned char **val)"Retrieves Trace-Event-List AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Trace-Event-List AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_trace_interface_list\fP (struct avp *gavp, unsigned char **val)"Retrieves Trace-Interface-List AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Trace-Interface-List AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_trace_ne_type_list\fP (struct avp *gavp, unsigned char **val)"Retrieves Trace-NE-Type-List AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Trace-NE-Type-List AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_trace_reference\fP (struct msg *msg, unsigned char **val)"Retrieves Trace-Reference AVP value from from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Trace-Reference AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_trace_reference_gavp\fP (struct avp *gavp, unsigned char **val)"Retrieves Trace-Reference AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Trace-Reference AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_tracking_area_identity\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Tracking-Area-Identity AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple Tracking-Area-Identity AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_ts_code_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple TS-Code AVPs value from message\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains multiple TS-Code AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_ts_code_gavp_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple TS-Code AVPs value from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple TS-Code AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_ue_srvcc_capability\fP (struct msg *msg, int32_t *val)"Retrieves UE-SRVCC-Capability AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains UE-SRVCC-Capability AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ula_flags\fP (struct msg *msg, uint32_t *val)"Retrieves ULA-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains ULA-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_ulr_flags\fP (struct msg *msg, uint32_t *val)"Retrieves ULR-Flags AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains ULR-Flags AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_user_id_array\fP (struct msg *msg, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple User-Id AVPs value from message\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains multiple User-Id AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_user_name\fP (struct msg *msg, unsigned char **val)"Retrieves User-Name (imsi) AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains User-Name AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_user_state\fP (struct avp *gavp, int32_t *val)"Retrieves User-State AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains User-State AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_vendor_id\fP (struct avp *gavp, uint32_t *val)"Retrieves Vendor-Id AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Vendor-Id AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_visited_network_identifier\fP (struct msg *msg, unsigned char **val)"
.SS "int \fBss_get_visited_network_identifier_gavp\fP (struct avp *gavp, unsigned char **val)"Retrieves Visited-Network-Identifier AVP value from AVP of type grouped\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Visited-Network-Identifier AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_visited_plmn_id\fP (struct msg *msg, unsigned char **val)"Retrieves Visited-PLMN-Id AVP value from message\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to a message structure which contains Visited-PLMN-Id AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found an its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_visited_plmn_id_array\fP (struct avp *gavp, unsigned char ***array_ret, size_t *array_size)"Retrieves multiple Visited-PLMN-Id AVPs' values from group AVP\&. Upon successful function return the parameter **array_ret will point to the value\&. If the return is 0(success) the **array_ret should be freed after use\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains multiple Visited-PLMN-Id AVPs\&. 
.br
\fIarray_ret\fP : the values will be saved in **array_ret\&. 
.br
\fIarray_size\fP : the number of values written to **array_ret\&. if function return is other than 0(success) this value is set to zero\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVPs has been found and its values are written to **array_ret\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.PP
ENOMEM : Memory allocation failed 
.RE
.PP

.SS "int \fBss_get_visited_plmn_id_gavp\fP (struct avp *gavp, unsigned char **val)"Retrieves Visited-PLMN-Id AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains Visited-PLMN-Id AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_vplmn_dynamic_address_allowed\fP (struct avp *gavp, int32_t *val)"Retrieves VPLMN-Dynamic-Address-Allowed AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains VPLMN-Dynamic-Address-Allowed AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_vplmn_lipa_allowed\fP (struct avp *gavp, int32_t *val)"Retrieves VPLMN-LIPA-Allowed AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains VPLMN-LIPA-Allowed AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_wlan_offloadability_eutran\fP (struct avp *gavp, uint32_t *val)"Retrieves WLAN-offloadability-EUTRAN AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains WLAN-offloadability-EUTRAN AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_wlan_offloadability_utran\fP (struct avp *gavp, uint32_t *val)"Retrieves WLAN-offloadability-UTRAN AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains WLAN-offloadability-UTRAN AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_get_xres\fP (struct avp *gavp, unsigned char **val)"Retrieves XRES AVP value from group AVP\&. Upon successful function return the parameter *val will point to the value\&. The value should not be freed since it was not malloced\&.
.PP
\fBParameters:\fP
.RS 4
\fIgavp\fP : a pointer to an AVP of type grouped which contains XRES AVP\&. 
.br
\fIval\fP : the value will be saved in *val\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The AVP has been found and its value is written to *val\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOENT : No AVP has been found\&. 
.RE
.PP

.SS "int \fBss_init\fP ()"Initializes the diameter protocol\&. It parses the diameter configuration file and initialize global variables based on the values in the configration file\&. It creates a connection with peers given in the confguration file\&. It loads the dictionary that contains the command and AVP definations and rules
.PP
\fBReturns:\fP
.RS 4
0 : initialized successfuly 
.PP
1 (other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_air\fP (struct msg **req)"Creates Authentication-Information-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_answer\fP (struct msg **msg)"Create answer message from a request message and add Vendor-Specific-Application-Id and Auth-Session-State in to the message\&. It copies the Session-Id from the request\&. Up on successful function return *msg will point to the answer message\&. The request message could be accessed by setting *msg to other pointer variable before calling this function\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : a pointer to the request message pointer\&. it will point to the answer message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : on success 
.PP
!0 : on failure 
.RE
.PP

.SS "int \fBss_msg_create_clr\fP (struct msg **req)"Creates Cancel-Location-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_dsr\fP (struct msg **req)"Creates Delete-Subscriber-Data-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_idr\fP (struct msg **req)"Creates Insert-Subscriber-Data-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_nor\fP (struct msg **req)"Creates Notify-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_pur\fP (struct msg **req)"Creates Purge-UE-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_rsr\fP (struct msg **req)"Creates Reset-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_msg_create_ulr\fP (struct msg **req)"Creates Update-Location-Request message and add a new Session-Id, Vendor-Specific-Application-Id, Auth-Session-State, Origin-Host and Origin-Realm AVP in to the message\&.
.PP
\fBParameters:\fP
.RS 4
\fIreq\fP : a pointer to the message structure pointer which will point to the created message upon successful function return\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : message is created (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_peer_state\fP (char *diam_id, size_tdiam_id_len)"Checks the connection state with remote peer\&. Only after the connection state is open that S6a messages may be sent to remote peer\&.
.PP
\fBParameters:\fP
.RS 4
\fIdiam_id\fP : diameter identity of remote peer 
.br
\fIdiam_id_len\fP : length of diameter identity
.RE
.PP
Possible states with remote peer are defined as enumeration:
.PP
enum peer_state { Stable states STATE_NEW = 0, // The peer has been just been created, PSM thread not started yet STATE_OPEN, //Connexion established
.PP
Peer state machine STATE_CLOSED, // No connection established, will re-attempt after TcTimer\&. STATE_CLOSING, // the connection is being shutdown (DPR/DPA in progress) STATE_WAITCNXACK, // Attempting to establish transport-level connection STATE_WAITCNXACK_ELEC, // Received a CER from this same peer on an incoming connection (other peer object), while we were waiting for cnx ack STATE_WAITCEA, // Connection established, CER sent, waiting for CEA
.PP
STATE_OPEN_HANDSHAKE, // TLS Handshake and validation are in progress in open state -- we use it only for debug purpose, it is never displayed
.PP
Failover state machine STATE_SUSPECT, //A DWR was sent and not answered within TwTime\&. Failover in progress\&. STATE_REOPEN, // Connection has been re-established, waiting for 3 DWR/DWA exchanges before putting back to service
.PP
Ordering issues with multistream & state machine\&. -- see top of p_psm\&.c for explanation STATE_OPEN_NEW, // after CEA is sent, until a new message is received\&. Force ordering in this state STATE_CLOSING_GRACE, // after DPA is sent or received, give a short delay for messages in the pipe to be received\&.
.PP
Error state STATE_ZOMBIE //The PSM thread is not running anymore; it must be re-started or peer should be deleted\&. };
.PP
\fBReturns:\fP
.RS 4
'enum peer_state' values as defined above\&. This values are defined in freediameter library\&. -1 : if peer is invalid/notfound 
.RE
.PP

.SS "int \fBss_reg_air_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"Check 
.PP
\fBSee also:\fP
.RS 4
\fBss_reg_ulr_cb\fP(int (*cb)( struct msg **, struct avp *, struct session *, void *, enum disp_action *)) for details about the callback functions
.RE
.PP
Registers a callback function 'cb' that will be called when Authentication-Information-Request is received\&. Check the above Call back functions description for detail about the callback function\&.
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_reg_clr_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"Check 
.PP
\fBSee also:\fP
.RS 4
\fBss_reg_ulr_cb\fP(int (*cb)( struct msg **, struct avp *, struct session *, void *, enum disp_action *)) for details about the callback functions
.RE
.PP
Registers a callback function 'cb' that will be call when Cancel-Location-Request is received\&. Check the above Call back functions description for detail about the callback function\&.
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_reg_dsr_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"Check 
.PP
\fBSee also:\fP
.RS 4
\fBss_reg_ulr_cb\fP(int (*cb)( struct msg **, struct avp *, struct session *, void *, enum disp_action *)) for details about the callback functions
.RE
.PP
Registers a callback function 'cb' that will be call when Delete-Subscriber-Data-Request is received\&. Check the above Call back functions description for detail about the callback function\&.
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_reg_idr_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"Check 
.PP
\fBSee also:\fP
.RS 4
\fBss_reg_ulr_cb\fP(int (*cb)( struct msg **, struct avp *, struct session *, void *, enum disp_action *)) for details about the callback functions
.RE
.PP
Registers a callback function 'cb' that will be called when Insert-Subscriber-Data-Request is received\&. Check the above Call back functions description for detail about the callback function\&.
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_reg_nor_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"Check 
.PP
\fBSee also:\fP
.RS 4
\fBss_reg_ulr_cb\fP(int (*cb)( struct msg **, struct avp *, struct session *, void *, enum disp_action *)) for details about the callback functions
.RE
.PP
Registers a callback function 'cb' that will be call when Notify-Request is received\&. Check the above Call back functions description for detail about the callback function\&.
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_reg_pur_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"Check 
.PP
\fBSee also:\fP
.RS 4
\fBss_reg_ulr_cb\fP(int (*cb)( struct msg **, struct avp *, struct session *, void *, enum disp_action *)) for details about the callback functions
.RE
.PP
Registers a callback function 'cb' that will be call when Purge-UE-Request is received\&. Check Request the above Call back functions description for detail about the callback function\&.
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_reg_rsr_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"Check 
.PP
\fBSee also:\fP
.RS 4
\fBss_reg_ulr_cb\fP(int (*cb)( struct msg **, struct avp *, struct session *, void *, enum disp_action *)) for details about the callback functions
.RE
.PP
Registers a callback function 'cb' that will be call when Reset-Request is received\&. Check the above Call back functions description for detail about the callback function\&.
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_reg_ulr_cb\fP (int(*)(struct msg **, struct avp *, struct session *, void *, enum disp_action *)cb)"(This description about callback funtiotion is directly copied from freediameter 'libfdproto\&.h' file) Call back functions: PARAMETERS: msg : the received message on function entry\&. may be updated to answer on return (see description) AVP : for callbacks registered with DISP_HOW_AVP or DISP_HOW_AVP_ENUMVAL, direct link to the triggering AVP\&. session : if the message contains a Session-Id AVP, the corresponding session object, NULL otherwise\&. opaque : An opaque pointer that is registered along the session handler\&. action : upon return, this tells the daemon what to do next\&.
.PP
DESCRIPTION: Called when a received message matchs the condition for which the callback was registered\&. This callback may do any kind of processing on the message, including:
.IP "\(bu" 2
create an answer for a request\&.
.IP "\(bu" 2
proxy a request or message, add / remove the Proxy-Info AVP, then forward the message\&.
.IP "\(bu" 2
update a routing table or start a connection with a new peer, then forward the message\&.
.IP "\(bu" 2
\&.\&.\&.
.PP
.PP
When *action == DISP_ACT_SEND on callback return, the msg pointed by *msg is passed to the routing module for sending\&. When *action == DISP_ACT_CONT, the next registered callback is called\&. When the last callback gives also DISP_ACT_CONT action value, a default handler is called\&. It's behavior is as follow:
.IP "\(bu" 2
if the message is an answer, it is discarded\&.
.IP "\(bu" 2
if the message is a request, it is passed again to the routing stack, and marked as non-local handling\&.
.PP
.PP
RETURN VALUE: 0 : The callback executed successfully and updated *action appropriately\&. !0 : standard errors\&. In case of error, the message is discarded\&.
.PP
(Description about callback funtions ends here)
.PP
Description: Registers a callback function 'cb' that will be call when Update-Location-Request is received\&. Check the above Call back functions description for detail about the callback function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcb\fP : The callback function to register that is called when ULR message is received 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : The callback is registered\&. 
.PP
EINVAL : A parameter is invalid\&. 
.PP
ENOMEM : Not enough memory to complete the operation 
.RE
.PP

.SS "int \fBss_set_3gpp2_meid\fP (struct avp **avp, unsigned char *val)"Sets 3GPP2-MEID AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of 3GPP2-MEID AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_3gpp_charging_characteristics\fP (struct avp **avp, unsigned char *val)"Sets 3GPP-Charging-Characteristics AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of 3GPP-Charging-Characteristics AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_a_msisdn\fP (struct avp **avp, unsigned char *val)"Sets A-MSISDN AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of A-MSISDN AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_access_restriction_data\fP (struct avp **avp, uint32_tval)"Sets Access-Restriction-Data AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Access-Restriction-Data AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_age_of_location_information\fP (struct avp **avp, uint32_tval)"Sets Age-Of-Location-Information AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Age-Of-Location-Information AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_alert_reason\fP (struct msg **msg, int32_tval)"Sets Alert-Reason AVP value and add it in to message structure\&. This function creates an instance of Alert-Reason AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_all_apn_configuration_included_indicator\fP (struct avp **avp, int32_tval)"Sets All-APN-Configurations-Included-Indicator AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of All-APN-Configurations-Included-Indicator AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_apn_oi_replacement\fP (struct avp **avp, unsigned char *val)"Sets APN-OI-Replacement AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of APN-OI-Replacement AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_auth_application_id\fP (struct avp **avp, uint32_tval)"Sets Auth-Application-Id AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Auth-Application-Id AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_autn\fP (struct avp **avp, unsigned char *val)"Sets AUTN AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of AUTN AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_cancellation_type\fP (struct msg **msg, int32_tval)"Sets Cancellation-Type AVP value and add it in to message structure\&. This function creates an instance of Cancellation-Type AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_cell_global_identity\fP (struct avp **avp, unsigned char *val)"Sets Cell-Global-Identity AVP values and add it in to AVP structure that can contain it\&. This function creates an instance of Cell-Global-Identity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_client_identity\fP (struct avp **avp, unsigned char *val)"Sets Client-Identity AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Client-Identity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_clr_flags\fP (struct msg **msg, uint32_tval)"Sets CLR-Flags AVP value and add it in to message structure\&. This function creates an instance of CLR-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_collection_period_rmm_lte\fP (struct avp **avp, int32_tval)"Sets Collection-Period-RMM-LTE AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Collection-Period-RMM-LTE AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_collection_period_rmm_umts\fP (struct avp **avp, int32_tval)"Sets Collection-Period-RRM-UMTS AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Collection-Period-RRM-UMTS AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_complete_data_list_included_indicator\fP (struct avp **avp, int32_tval)"Sets Complete-Data-List-Included-Indicator AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Complete-Data-List-Included-Indicator AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_confidentiality_key\fP (struct avp **avp, unsigned char *val)"Sets Confidentiality-Key AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Confidentiality-Key AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_context_identifier\fP (\fBavp_or_msg\fP **msg_avp, uint32_tval)"Sets Context-Identifier AVP value and add it in to message or group AVP structure\&. This function creates an instance of Context-Identifier AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to the message structure pointer or AVP of type grouped where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_coupled_node_diameter_id\fP (struct msg **msg, unsigned char *val)"Sets Coupled-Node-Diameter-ID AVP value and add it in to message structure\&. This function creates an instance of Coupled-Node-Diameter-ID AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_csg_access_mode\fP (struct avp **avp, int32_tval)"Sets CSG-Access-Mode AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of CSG-Access-Mode AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_csg_id\fP (struct avp **avp, uint32_tval)"Sets CSG-Id AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Ext-CSG-Id AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_csg_membership_indication\fP (struct avp **avp, int32_tval)"Sets CSG-Membership-Indication AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of CSG-Membership-Indication AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_current_location_retrieved\fP (struct avp **avp, int32_tval)"Sets Current-Location-retrieved AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Current-Location-retrieved AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_daylight_saving_time\fP (struct avp **avp, int32_tval)"Sets Daylight-Saving-Time AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Daylight-Saving-Time AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_destination_host\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"SET VALUE OF AVP AND ADD IT TO MESSAGE OR GROUP AVP Sets Destination-Host AVP value and add it in to a message structure\&. This function creates an instance of Destination-Host AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to the message structure pointer or an AVP of type gruoped where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_destination_realm\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"Sets Destination-Realm AVP value and add it in to messagestructure\&. This function creates an instance of Destination-Realm AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to the message structure pointer or an AVP of type gruoped where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_dsa_flags\fP (struct msg **msg, uint32_tval)"Sets DSA-Flags AVP value and add it in to message structure\&. This function creates an instance of DSA-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_dsr_flags\fP (struct msg **msg, uint32_tval)"Sets DSR-Flags AVP value and add it in to message structure\&. This function creates an instance of DSR-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_e_utran_cell_global_identity\fP (struct avp **avp, unsigned char *val)"Sets E-UTRAN-Cell-Global-Identity AVP values and add it in to AVP structure that can contain it\&. This function creates an instance of E-UTRAN-Cell-Global-Identity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_error_diagnostic\fP (struct msg **msg, int32_tval)"Sets Error-Diagnostic AVP value and add it to message structure\&. This function creates an instance of SMS-Register-Request AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_event_threshold_event_1f\fP (struct avp **avp, uint32_tval)"Sets Event-Threshold-Event-1F AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Event-Threshold-Event-1F AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_event_threshold_event_1i\fP (struct avp **avp, uint32_tval)"Sets Event-Threshold-Event-1I AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Event-Threshold-Event-1I AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_event_threshold_rsrp\fP (struct avp **avp, uint32_tval)"Sets Event-Threshold-RSRP AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Event-Threshold-RSRP AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_event_threshold_rsrq\fP (struct avp **avp, uint32_tval)"Sets Event-Threshold-RSRQ AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Event-Threshold-RSRQ AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_experimental_result_code\fP (struct avp **avp, uint32_tval)"Sets Experimental-Result-Code AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Experimental-Result-Code AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_expiration_date\fP (struct avp **avp, unsigned char *val)"Sets Expiration-Date AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Expiration-Date AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ext_pdp_address\fP (struct avp **avp, unsigned char *val)"Sets Ext-PDP-Address AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Ext-PDP-Address AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ext_pdp_type\fP (struct avp **avp, unsigned char *val)"Sets Ext-PDP-Type AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Ext-PDP-Type AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_feature_list\fP (struct avp **avp, uint32_tval)"Sets Feature-List AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Feature-List AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_feature_list_id\fP (struct avp **avp, uint32_tval)"Sets Feature-List-ID AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Feature-List-ID AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_geodetic_information\fP (struct avp **avp, unsigned char *val)"Sets Geodetic-Information AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Geodetic-Information AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_geographical_information\fP (struct avp **avp, unsigned char *val)"Sets Geographical-Information AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Geographical-Information AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_gmlc_address\fP (struct msg **msg, unsigned char *val)"Sets GMLC-Address AVP value and add it in to message structure\&. This function creates an instance of GMLC-Address AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_gmlc_number\fP (struct avp **avp, unsigned char *val)"Sets Multiple GMLC-Number AVPs value and add it in to AVP structure that can contain it\&. This function creates an instance of Multiple GMLC-Number AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_gmlc_restriction\fP (struct avp **avp, int32_tval)"Sets GMLC-Restriction AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of GMLC-Restriction AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_homogeneous_support_ims_vop_sessions\fP (struct msg **msg, int32_tval)"Sets Homogeneous-Support-of-IMS-Voice-Over-PS-Sessions AVP value and add it in to message structure\&. This function creates an instance of Homogeneous-Support-of-IMS-Voice-Over-PS-Sessions AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_hplmn_odb\fP (struct avp **avp, uint32_tval)"Sets HPLMN-ODB AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of HPLMN-ODB AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ics_indicator\fP (struct avp **avp, int32_tval)"Sets ICS-Indicator AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of ICS-Indicator AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ida_flags\fP (struct msg **msg, uint32_tval)"Sets IDA-Flags AVP value and add it in to message structure\&. This function creates an instance of IDA-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_idr_flags\fP (struct msg **msg, uint32_tval)"Sets IDR-Flags AVP value and add it in to message structure\&. This function creates an instance of IDR-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_imei\fP (struct avp **avp, unsigned char *val)"Sets IMEI AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of IMEI AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_immediate_response_preferred\fP (struct avp **avp, uint32_tval)"Sets Immediate-Response-Preferred AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Immediate-Response-Preferred AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ims_voice_over_ps_sessions_supported\fP (struct msg **msg, int32_tval)"Sets IMS-Voice-Over-PS-Sessions-Supported AVP value and add it in to message structure\&. This function creates an instance of IMS-Voice-Over-PS-Sessions-Supported AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_integrity_key\fP (struct avp **avp, unsigned char *val)"Sets Integrity-Key AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Integrity-Key AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_item_number\fP (struct avp **avp, uint32_tval)"Sets Item-Number AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Item-Number AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_job_type\fP (struct avp **avp, int32_tval)"Sets Job-Type AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Job-Type AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_kasme\fP (struct avp **avp, unsigned char *val)"Sets KASME AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of KASME AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_kc\fP (struct avp **avp, unsigned char *val)"Sets Kc AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Kc AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_last_ue_activity_time\fP (struct msg **msg, unsigned char *val)"Sets Last-UE-Activity-Time AVP value and add it in to message structure\&. This function creates an instance of Last-UE-Activity-Time AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_lipa_permission\fP (struct avp **avp, int32_tval)"Sets LIPA-Permission AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of LIPA-Permission AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_list_of_measurements\fP (struct avp **avp, uint32_tval)"Sets List-Of-Measurements AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of List-Of-Measurements AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_location_area_identity\fP (struct avp **avp, unsigned char *val)"Sets Location-Area-Identity AVP values add it in to AVP structure that can contain it\&. This function creates an instance of Location-Area-Identity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_logging_duration\fP (struct avp **avp, int32_tval)"Sets Logging-Duration AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Logging-Duration AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_logging_interval\fP (struct avp **avp, int32_tval)"Sets Logging-Interval AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Logging-Interval AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_max_requested_bw_dl\fP (struct avp **avp, uint32_tval)"Sets Max-Requested-Bandwidth-DL AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Max-Requested-Bandwidth-DL AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_max_requested_bw_ul\fP (struct avp **avp, uint32_tval)"Sets Max-Requested-Bandwidth-UL AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Max-Requested-Bandwidth-UL AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_mdt_allowed_plmn_id\fP (struct avp **avp, unsigned char *val)"Sets MDT-Allowed-PLMN-Id AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of MDT-Allowed-PLMN-Id AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_mdt_user_consent\fP (struct avp **avp, int32_tval)"Sets MDT-User-Consent AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of MDT-User-Consent AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_measurement_period_lte\fP (struct avp **avp, int32_tval)"Sets Measurement-Period-LTE AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Measurement-Period-LTE AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_measurement_period_umts\fP (struct avp **avp, int32_tval)"Sets Measurement-Period-UMTS AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Measurement-Period-UMTS AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_measurement_quantity\fP (struct avp **avp, unsigned char *val)"Sets Measurement-Quantity AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Measurement-Quantity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_mip_home_agent_address\fP (struct avp **avp, unsigned char *val)"Sets MIP-Home-Agent-Address AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of MIP-Home-Agent-Address AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_mip_home_agent_host\fP (struct avp **avp, unsigned char *val)"Sets MIP-Home-Agent-Host AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of MIP-Home-Agent-Host AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_mme_number_for_mt_sms\fP (struct msg **msg, unsigned char *val)"Sets MME-Number-for-MT-SMS AVP value and add it in to message structure\&. This function creates an instance of MME-Number-for-MT-SMS AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_mps_priority\fP (struct avp **avp, uint32_tval)"Sets MPS-Priority AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of MPS-Priority AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_msisdn\fP (struct avp **avp, unsigned char *val)"Sets MSISDN AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of MSISDN AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_network_access_mode\fP (struct avp **avp, int32_tval)"Sets Network-Access-Mode AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Network-Access-Mode AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_nor_flags\fP (struct msg **msg, uint32_tval)"Sets NOR-Flags AVP value and add it in to message structure\&. This function creates an instance of NOR-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_notification_ue_user\fP (struct avp **avp, int32_tval)"Sets Notification-To-UE-User AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Notification-To-UE-User AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_number_of_requested_vectors\fP (struct avp **avp, uint32_tval)"Sets Number-Of-Requested-Vectors AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Number-Of-Requested-Vectors AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_omc_id\fP (struct avp **avp, unsigned char *val)"Sets OMC-Id AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of OMC-Id AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_operator_determined_barring\fP (struct avp **avp, uint32_tval)"Sets Operator-Determined-Barring AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Operator-Determined-Barring AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_origin_host\fP (struct msg **msg, unsigned char *val)"Sets Origin-Host AVP value and add it in to message structure\&. This function creates an instance of Origin-Host AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_origin_realm\fP (struct msg **msg, unsigned char *val)"Sets Origin-Realm AVP value and add it in to message structure\&. This function creates an instance of Origin-Realm AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pdn_gw_allocation_type\fP (struct avp **avp, int32_tval)"Sets PDN-GW-Allocation-Type AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of PDN-GW-Allocation-Type AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pdn_type\fP (struct avp **avp, int32_tval)"Sets PDN-Type AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of PDN-Type AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pdp_address\fP (struct avp **avp, unsigned char *val)"Sets PDP-Address AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of PDP-Address AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pdp_type\fP (struct avp **avp, unsigned char *val)"Sets PDP-Type AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of PDP-Type AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_plmn_client\fP (struct avp **avp, int32_tval)"Sets PLMN-Client AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of PLMN-Client AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_positioning_method\fP (struct avp **avp, unsigned char *val)"Sets Positioning-Method AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Positioning-Method AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pre_emption_capability\fP (struct avp **avp, int32_tval)"Sets Pre-emption-Capability AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Pre-emption-Capability AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pre_emption_vulnerability\fP (struct avp **avp, int32_tval)"Sets Pre-emption-Vulnerability AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Pre-emption-Vulnerability AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_priority_level\fP (struct avp **avp, uint32_tval)"Sets Priority-Level AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Priority-Level AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_prose_permission\fP (struct avp **avp, uint32_tval)"Sets ProSe-Permission AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of ProSe-Permission AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pua_flags\fP (struct msg **msg, uint32_tval)"Sets PUA-Flags AVP value and add it in to message structure\&. This function creates an instance of PUA-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_pur_flags\fP (struct msg **msg, uint32_tval)"Sets PUR-Flags AVP value and add it in to message structure\&. This function creates an instance of PUR-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_qos_class_identifier\fP (struct avp **avp, int32_tval)"Sets QoS-Class-Identifier AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of QoS-Class-Identifier AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_qos_subscribed\fP (struct avp **avp, unsigned char *val)"Sets QoS-Subscribed AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of QoS-Subscribed AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_rand\fP (struct avp **avp, unsigned char *val)"Sets RAND AVP value and add it to in to AVP structure that can contain it\&. This function creates an instance of RAND AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_rat_frequency_selection_priority_id\fP (struct avp **avp, uint32_tval)"Sets RAT-Frequency-Selection-Priority-ID AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of RAT-Frequency-Selection-Priority-ID AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_rat_type\fP (struct msg **msg, int32_tval)"Sets RAT-Type AVP value and add it in to message structure\&. This function creates an instance of RAT-Type AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_re_synchronization_info\fP (struct avp **avp, unsigned char *val)"Sets Re-synchronization-Info AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Re-synchronization-Info AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_regional_subscription_zone_code\fP (struct avp **avp, unsigned char *val)"Sets Regional-Subscription-Zone-Code AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Regional-Subscription-Zone-Code AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_relay_node_indicator\fP (struct avp **avp, int32_tval)"Sets Relay-Node-Indicator AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Relay-Node-Indicator AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_report_amount\fP (struct avp **avp, int32_tval)"Sets Report-Amount AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Report-Amount AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_report_interval\fP (struct avp **avp, int32_tval)"Sets Report-Interval AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Report-Interval AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_reporting_trigger\fP (struct avp **avp, uint32_tval)"Sets Reporting-Trigger AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Reporting-Trigger AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_reset_id\fP (struct msg **msg, unsigned char *val)"Sets Reset-ID AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Reset-ID AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to a message structure pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_restoration_priority\fP (struct avp **avp, uint32_tval)"Sets Restoration-Priority AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Restoration-Priority AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_result_code\fP (struct msg **msg, uint32_tval)"Sets Result-Code AVP value and add it to message structure\&. This function creates an instance of SMS-Register-Request AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_roaming_restricted_unsupported_feature\fP (struct avp **avp, int32_tval)"Sets Roaming-Restricted-Due-To-Unsupported-Feature AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Roaming-Restricted-Due-To-Unsupported-Feature AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_routing_area_identity\fP (struct avp **avp, unsigned char *val)"Sets Routing-Area-Identity AVP values and add it in to AVP structure that can contain it\&. This function creates an instance of Routing-Area-Identity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_served_party_ip_address\fP (struct avp **avp, unsigned char *val)"Sets Served-Party-IP-Address AVP values and add it in to AVP structure that can contain it\&. This function creates an instance of Served-Party-IP-Address AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_service_selection\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"Sets Service-Selection AVP value and add it in to message structure\&. This function creates an instance of Service-Selection AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to the message structure pointer or an AVP of typed grouped where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_serviceTypeIdentity\fP (struct avp **avp, uint32_tval)"Sets ServiceTypeIdentity AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of ServiceTypeIdentity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_sgsn_number\fP (struct msg **msg, unsigned char *val)"Sets SGSN-Number AVP value and add it in to message structure\&. This function creates an instance of SGSN-Number AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_sipto_local_network_permission\fP (struct avp **avp, int32_tval)"Sets SIPTO-Local-Network-Permission AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of SIPTO-Local-Network-Permission AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_sipto_permission\fP (struct avp **avp, int32_tval)"Sets SIPTO-Permission AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of SIPTO-Permission AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_sms_register_request\fP (struct msg **msg, int32_tval)"Sets SMS-Register-Request AVP value and add it in to message structure\&. This function creates an instance of SMS-Register-Request AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_software_version\fP (struct avp **avp, unsigned char *val)"Sets Software-Version AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Software-Version AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_sres\fP (struct avp **avp, unsigned char *val)"Sets SRES AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of SRES AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ss_code\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"Sets SS-Code AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of SS-Code AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to an AVP of type grouped pointer or pointer to a message structure pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ss_status\fP (struct avp **avp, unsigned char *val)"Sets SS-Status AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of SS-Status AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_stn_sr\fP (struct avp **avp, unsigned char *val)"Sets STN-SR AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of A-MSISDN AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_subscribed_periodic_rau_tau_timer\fP (struct avp **avp, uint32_tval)"Sets Subscribed-Periodic-RAU-TAU-Timer AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Subscribed-Periodic-RAU-TAU-Timer AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_subscribed_vsrvcc\fP (struct avp **avp, int32_tval)"Sets Subscribed-VSRVCC AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Subscribed-VSRVCC AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_subscriber_status\fP (struct avp **avp, int32_tval)"Sets Subscriber-Status AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Subscriber-Status AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_subscription_data_flags\fP (struct avp **avp, uint32_tval)"Sets Subscription-Data-Flags AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Subscription-Data-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_time_zone\fP (struct avp **avp, unsigned char *val)"Sets Time-Zone AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Time-Zone AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_trace_collection_entity\fP (struct avp **avp, unsigned char *val)"Sets Trace-Collection-Entity AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Trace-Collection-Entity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_trace_depth\fP (struct avp **avp, int32_tval)"Sets Trace-Depth AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Trace-Depth AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_trace_event_list\fP (struct avp **avp, unsigned char *val)"Sets Trace-Event-List AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Trace-Event-List AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_trace_interface_list\fP (struct avp **avp, unsigned char *val)"Sets Trace-Interface-List AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Trace-Interface-List AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_trace_ne_type_list\fP (struct avp **avp, unsigned char *val)"Sets Trace-NE-Type-List AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Trace-NE-Type-List AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_trace_reference\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"Sets Trace-Reference AVP value and add it in to AVP structure or message structure that can contain it\&. This function creates an instance of Trace-Reference AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to an AVP of type grouped pointer or message structure pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_tracking_area_identity\fP (struct avp **avp, unsigned char *val)"Sets Tracking-Area-Identity AVP values and add it in to AVP structure that can contain it\&. This function creates an instance of Tracking-Area-Identity AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ts_code\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"Sets TS-Code AVPs value and add it in to AVP structure or message sturcture that can contain it\&. This function creates an instance of TS-Code AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to an AVP of type grouped pointer message structure pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ue_srvcc_capability\fP (struct msg **msg, int32_tval)"Sets UE-SRVCC-Capability AVP value and add it in to message structure\&. This function creates an instance of UE-SRVCC-Capability AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ula_flags\fP (struct msg **msg, uint32_tval)"Sets ULA-Flags AVP value and add it to message structure\&. This function creates an instance of SMS-Register-Request AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_ulr_flags\fP (struct msg **msg, uint32_tval)"Sets ULR-Flags AVP value and add it in to message structure\&. This function creates an instance of ULR-Flags AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_user_id\fP (struct msg **msg, unsigned char *val)"Sets multiple User-Id AVPs value and add it in to message structure\&. This function creates an instance of User-Id AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_user_name\fP (struct msg **msg, unsigned char *val)"Sets User-Name (imsi) AVP value and add it in to message structure\&. This function creates an instance of User-Name AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP : pointer to the message structure pointer where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_user_state\fP (struct avp **avp, int32_tval)"Sets User-State AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of User-State AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_vendor_id\fP (struct avp **avp, uint32_tval)"Sets Vendor-Id AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of Vendor-Id AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_visited_network_identifier\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"Sets Visited-Network-Identifier AVP value and add it in to message structure\&. This function creates an instance of Visited-Network-Identifier AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to the message structure pointer or an AVP of typed grouped where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_visited_plmn_id\fP (\fBavp_or_msg\fP **msg_avp, unsigned char *val)"Sets Visited-PLMN-Id AVP value and add it in to message structure\&. This function creates an instance of Visited-PLMN-Id AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg_avp\fP : pointer to the message structure pointer or an AVP of typed grouped where the AVP will be added after being set 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_vplmn_dynamic_address_allowed\fP (struct avp **avp, int32_tval)"Sets VPLMN-Dynamic-Address-Allowed AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of VPLMN-Dynamic-Address-Allowed AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_vplmn_lipa_allowed\fP (struct avp **avp, int32_tval)"Sets VPLMN-LIPA-Allowed AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of VPLMN-LIPA-Allowed AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_wlan_offloadability_eutran\fP (struct avp **avp, uint32_tval)"Sets WLAN-offloadability-EUTRAN AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of WLAN-offloadability-EUTRAN AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_wlan_offloadability_utran\fP (struct avp **avp, uint32_tval)"Sets WLAN-offloadability-UTRAN AVP value and add it in to AVP structure that can contain it\&. This function creates an instance of WLAN-offloadability-UTRAN AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SS "int \fBss_set_xres\fP (struct avp **avp, unsigned char *val)"Sets XRES AVP value and add it to in to AVP structure that can contain it\&. This function creates an instance of XRES AVP and set the given value in to it and add the AVP into the given message structure\&.
.PP
\fBParameters:\fP
.RS 4
\fIavp\fP : pointer to an AVP of type grouped pointer where the AVP will be added after being set\&. 
.br
\fIval,:\fP the value to be set 
.RE
.PP
\fBReturns:\fP
.RS 4
0 : AVP value is set and AVP is added (success) 
.PP
EINVAL : invalid parameter 
.PP
(other standard errors may be returned, too, with their standard meaning\&. Example: ENOMEM : Memory allocation for the new object element failed\&.) 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "char* \fBss_diameter_conffile_name\fP"Global variable to store configuration file path including filename (eg\&. '\&./conf/freed\&.conf')\&. It should be set before 'ss_init' function is called\&. If it is initialized to NULL or not initialized at all the configuration file is should be located in same directory as the excutable code file name should be 'freeDiameter\&.conf'\&. Note: This variable is already defined to a NULL value\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for S6a Interface Library from the source code\&.
