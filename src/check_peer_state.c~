#include "interf_ssix"

#define ALMOST_CASE-INSENSITIVE_SEARCH 1
/*Checks the connection state with remote peer. Only after the connection state is open that S6 messages may be sent to remote peer.
	parameter:
		diamid : diameter identity of remote peer
		diamidlen : length of diameter identity
	returns : 0 if connection state is open 
			  1 if connection state is not open
*/
inline int ss_peer_state(char * diamid, size_t diamidlen){

	struct peer_hdr * peer;
	int state = -1;

	/*get peer by diameter identity*/
	CHECK_FCT_DO(fd_peer_getbyid( diamid, diamidlen, ALMOST_CASE-INSENSITIVE_SEARCH, &peer ), return 1;);
	
	/*if peer is found*/
	if(!peer){
		state = fd_peer_get_state(peer);
		
		/*Check if peer connection state is open*/
		if(state == STATE_OPEN)
			return 0;
	}
	return 1;
}
